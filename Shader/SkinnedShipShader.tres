[gd_resource type="VisualShader" load_steps=14 format=2]

[sub_resource type="VisualShaderNodeVectorCompose" id=1]

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 5

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "texture"

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=11]
uniform_name = "SkinScale"
default_value_enabled = true
default_value = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeTextureUniform" id=12]
uniform_name = "SkinTexture"
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id=14]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=4]
uniform_name = "SkinOffset"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=7]

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[sub_resource type="VisualShaderNodeScalarOp" id=9]

[resource]
code = "shader_type canvas_item;
uniform vec3 SkinScale = vec3(1.000000, 1.000000, 1.000000);
uniform vec3 SkinOffset = vec3(0.000000, 0.000000, 0.000000);
uniform sampler2D SkinTexture : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:12

// Texture:11
	vec3 n_out11p0;
	float n_out11p1;
	{
		vec4 TEXTURE_tex_read = texture(TEXTURE, UV.xy);
		n_out11p0 = TEXTURE_tex_read.rgb;
		n_out11p1 = TEXTURE_tex_read.a;
	}

// VectorUniform:14
	vec3 n_out14p0 = SkinScale;

// Input:5
	vec3 n_out5p0 = vec3(UV, 0.0);

// VectorDecompose:6
	float n_out6p0 = n_out5p0.x;
	float n_out6p1 = n_out5p0.y;
	float n_out6p2 = n_out5p0.z;

// VectorUniform:2
	vec3 n_out2p0 = SkinOffset;

// VectorDecompose:8
	float n_out8p0 = n_out2p0.x;
	float n_out8p1 = n_out2p0.y;
	float n_out8p2 = n_out2p0.z;

// ScalarOp:7
	float n_out7p0 = n_out6p0 + n_out8p0;

// ScalarOp:9
	float n_out9p0 = n_out6p1 + n_out8p1;

// VectorCompose:10
	float n_in10p2 = 0.00000;
	vec3 n_out10p0 = vec3(n_out7p0, n_out9p0, n_in10p2);

// VectorOp:13
	vec3 n_out13p0 = n_out14p0 * n_out10p0;

// TextureUniform:16
	vec3 n_out16p0;
	float n_out16p1;
	{
		vec4 n_tex_read = texture(SkinTexture, n_out13p0.xy);
		n_out16p0 = n_tex_read.rgb;
		n_out16p1 = n_tex_read.a;
	}

// VectorOp:18
	vec3 n_out18p0 = n_out11p0 * n_out16p0;

// Output:0
	COLOR.rgb = n_out18p0;
	COLOR.a = n_out11p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1626.56, -301.551 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( -380, 160 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -3780, 1000 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -3360, 800 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( -3060, 800 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( -2600, 660 )
nodes/fragment/8/node = SubResource( 8 )
nodes/fragment/8/position = Vector2( -3060, 1000 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( -2600, 1220 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -2220, 680 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -1260, -180 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -1547.04, -71.36 )
nodes/fragment/13/node = SubResource( 10 )
nodes/fragment/13/position = Vector2( -1860, 600 )
nodes/fragment/14/node = SubResource( 11 )
nodes/fragment/14/position = Vector2( -2600, 380 )
nodes/fragment/16/node = SubResource( 12 )
nodes/fragment/16/position = Vector2( -1440, 480 )
nodes/fragment/18/node = SubResource( 14 )
nodes/fragment/18/position = Vector2( -800, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 8, 0, 6, 0, 7, 0, 8, 0, 7, 1, 6, 1, 9, 0, 7, 0, 10, 0, 9, 0, 10, 1, 12, 0, 11, 2, 11, 1, 0, 1, 8, 1, 9, 1, 5, 0, 6, 0, 10, 0, 13, 1, 14, 0, 13, 0, 13, 0, 16, 0, 16, 0, 18, 1, 11, 0, 18, 0, 18, 0, 0, 0, 2, 0, 8, 0, 6, 0, 7, 0, 8, 0, 7, 1, 6, 1, 9, 0, 7, 0, 10, 0, 9, 0, 10, 1, 12, 0, 11, 2, 11, 1, 0, 1, 8, 1, 9, 1, 5, 0, 6, 0, 10, 0, 13, 1, 14, 0, 13, 0, 13, 0, 16, 0, 16, 0, 18, 1, 11, 0, 18, 0, 18, 0, 0, 0 )
